name: Release-please

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - id: release-please
        uses: google-github-actions/release-please-action@e4dc86ba9405554aeba3c6bb2d169500e7d3b4ee # v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_PAT }}
    outputs:
      releases: ${{ steps.release-please.outputs.releases_created }}
      release-aliri: ${{ steps.release-please.outputs['aliri--release_created'] }}
      release-aliri_actix: ${{ steps.release-please.outputs['aliri_actix--release_created'] }}
      release-aliri_axum: ${{ steps.release-please.outputs['aliri_axum--release_created'] }}
      release-aliri_base64: ${{ steps.release-please.outputs['aliri_base64--release_created'] }}
      release-aliri_clock: ${{ steps.release-please.outputs['aliri_clock--release_created'] }}
      release-aliri_macros: ${{ steps.release-please.outputs['aliri_macros--release_created'] }}
      release-aliri_oauth2: ${{ steps.release-please.outputs['aliri_oauth2--release_created'] }}
      release-aliri_reqwest: ${{ steps.release-please.outputs['aliri_reqwest--release_created'] }}
      release-aliri_tokens: ${{ steps.release-please.outputs['aliri_tokens--release_created'] }}
      release-aliri_tower: ${{ steps.release-please.outputs['aliri_tower--release_created'] }}
      release-aliri_traits: ${{ steps.release-please.outputs['aliri_traits--release_created'] }}
      release-aliri_warp: ${{ steps.release-please.outputs['aliri_warp--release_created'] }}
  release:
    if: needs.release-please.outputs.releases == 'true'
    runs-on: ubuntu-22.04
    needs: release-please
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - name: Install Stable Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      # Shared
      - name: Publish aliri_base64 crate
        if: needs.release-please.outputs.release-aliri_base64 == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_base64
        shell: bash
      - name: Publish aliri_clock crate
        if: needs.release-please.outputs.release-aliri_clock == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_clock
        shell: bash
      - name: Publish aliri_macros crate
        if: needs.release-please.outputs.release-aliri_macros == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_macros
        shell: bash
      - name: Publish aliri_traits crate
        if: needs.release-please.outputs.release-aliri_traits == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_traits
        shell: bash

      # Core
      - name: Publish aliri crate
        if: needs.release-please.outputs.release-aliri == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri
        shell: bash
      - name: Publish aliri_oauth2 crate
        if: needs.release-please.outputs.release-aliri_oauth2 == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_oauth2
        shell: bash

      # Hyper/Axum
      - name: Publish aliri_tower crate
        if: needs.release-please.outputs.release-aliri_tower == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_tower
        shell: bash
      - name: Publish aliri_axum crate
        if: needs.release-please.outputs.release-aliri_axum == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_axum
        shell: bash

      # Reqwest
      - name: Publish aliri_tokens crate
        if: needs.release-please.outputs.release-aliri_tokens == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_tokens
        shell: bash
      - name: Publish aliri_reqwest crate
        if: needs.release-please.outputs.release-aliri_reqwest == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_reqwest
        shell: bash

      # Actix
      - name: Publish aliri_actix crate
        if: needs.release-please.outputs.release-aliri_actix == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_actix
        shell: bash

      # Warp
      - name: Publish aliri_warp crate
        if: needs.release-please.outputs.release-aliri_warp == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish -p aliri_warp
        shell: bash
